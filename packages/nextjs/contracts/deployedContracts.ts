/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    YourContract: {
      address: "0xf7cd8fa9b94db2aa972023b379c7f72c65e4de9d",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "greeting",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "premium",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setGreeting",
          inputs: [
            {
              name: "_newGreeting",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "totalCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "userGreetingCounter",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "GreetingChange",
          inputs: [
            {
              name: "greetingSetter",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newGreeting",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "premium",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1740568542.json",
      deploymentScript: "Deploy.s.sol",
    },
    Contractly: {
      address: "0x12975173b87f7595ee45dffb2ab812ece596bf84",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "agreementCount",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "agreements",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "title",
              type: "string",
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              internalType: "string",
            },
            {
              name: "creator",
              type: "address",
              internalType: "address",
            },
            {
              name: "creationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "expirationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "stakingAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum Contractly.AgreementStatus",
            },
            {
              name: "requiresAllPartiesToSign",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "isStakingRequired",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "breachAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_breachingParty",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createAgreement",
          inputs: [
            {
              name: "_title",
              type: "string",
              internalType: "string",
            },
            {
              name: "_description",
              type: "string",
              internalType: "string",
            },
            {
              name: "_parties",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "_expirationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_requiresAllPartiesToSign",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_isStakingRequired",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_stakingAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "fulfillAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getAgreementStatus",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "enum Contractly.AgreementStatus",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getStakedAmount",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_party",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isParty",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_address",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "signAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "stakeAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "stakedFunds",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "AgreementActivated",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AgreementBreached",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "breachingParty",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AgreementCreated",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "creator",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "title",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AgreementFulfilled",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AgreementSigned",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "party",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FundsReleased",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "party",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FundsStaked",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "party",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1740568542.json",
      deploymentScript: "Deploy.s.sol",
    },
    TimeGuarantee: {
      address: "0x82dc47734901ee7d4f4232f398752cb9dd5daccc",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_contractlyAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "confirmDelivery",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_deliveryTime",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "contractlyCore",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract Contractly",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "createTimeGuarantee",
          inputs: [
            {
              name: "_orderReference",
              type: "string",
              internalType: "string",
            },
            {
              name: "_customer",
              type: "address",
              internalType: "address",
            },
            {
              name: "_promisedDeliveryTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_guaranteeAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "deliveries",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "merchant",
              type: "address",
              internalType: "address",
            },
            {
              name: "customer",
              type: "address",
              internalType: "address",
            },
            {
              name: "orderReference",
              type: "string",
              internalType: "string",
            },
            {
              name: "promisedDeliveryTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "guaranteeAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "isDelivered",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "actualDeliveryTime",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "CompensationPaid",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "customer",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DeliveryConfirmed",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "deliveryTime",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "wasOnTime",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TimeGuaranteeCreated",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "merchant",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "customer",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "orderReference",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1740568542.json",
      deploymentScript: "Deploy.s.sol",
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
