/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    Contractly: {
      address: "0x5845d39e5ccb14a4781985de580b86d5b80f05af",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "activateAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addAuthorizedContract",
          inputs: [
            {
              name: "_contractAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addParty",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_partyAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "_requiresStaking",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_stakeRatio",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "agreementCount",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "agreements",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "title",
              type: "string",
              internalType: "string",
            },
            {
              name: "creator",
              type: "address",
              internalType: "address",
            },
            {
              name: "creationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "expirationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "disputeWindowDuration",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "totalStakingAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum Contractly.AgreementStatus",
            },
            {
              name: "requiresAllPartiesToSign",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "isStakingRequired",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "authorizedContracts",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "breachAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_breachingParty",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createAgreement",
          inputs: [
            {
              name: "_title",
              type: "string",
              internalType: "string",
            },
            {
              name: "_creator",
              type: "address",
              internalType: "address",
            },
            {
              name: "_expirationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_totalStakingAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_isStakingRequired",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "_requiresAllPartiesToSign",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "fulfillAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "title",
              type: "string",
              internalType: "string",
            },
            {
              name: "creator",
              type: "address",
              internalType: "address",
            },
            {
              name: "creationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "expirationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "disputeWindowDuration",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "totalStakingAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum Contractly.AgreementStatus",
            },
            {
              name: "requiresAllPartiesToSign",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "isStakingRequired",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "partyAddresses",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getAgreementStatus",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "enum Contractly.AgreementStatus",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getParty",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_partyAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "requiresStaking",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "stakeRatio",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "hasSigned",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getPartyAddressAtIndex",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_index",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getPartyAddresses",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getPartyCount",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getStakedAmount",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_party",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isAuthorizedContract",
          inputs: [
            {
              name: "_contractAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "lockAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "removeAuthorizedContract",
          inputs: [
            {
              name: "_contractAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "signAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_signer",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "stakeAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "stakedFunds",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "AgreementActivated",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AgreementBreached",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "breachingParty",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AgreementCreated",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "creator",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "title",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AgreementFulfilled",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AgreementLocked",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "AgreementSigned",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "party",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FundsReleased",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "party",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FundsStaked",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "party",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AgreementMustBeActive",
          inputs: [],
        },
        {
          type: "error",
          name: "AgreementNotFound",
          inputs: [],
        },
        {
          type: "error",
          name: "AlreadySigned",
          inputs: [],
        },
        {
          type: "error",
          name: "AlreadyStaked",
          inputs: [],
        },
        {
          type: "error",
          name: "ConditionsNotMet",
          inputs: [],
        },
        {
          type: "error",
          name: "FundsDistributionFailed",
          inputs: [],
        },
        {
          type: "error",
          name: "FundsReturnFailed",
          inputs: [],
        },
        {
          type: "error",
          name: "FundsTransferFailed",
          inputs: [],
        },
        {
          type: "error",
          name: "FutureExpirationRequired",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidStakingAmount",
          inputs: [],
        },
        {
          type: "error",
          name: "NotActiveStatus",
          inputs: [],
        },
        {
          type: "error",
          name: "NotAgreementParty",
          inputs: [],
        },
        {
          type: "error",
          name: "NotLockedStatus",
          inputs: [],
        },
        {
          type: "error",
          name: "NotPendingStatus",
          inputs: [],
        },
        {
          type: "error",
          name: "OnlyOwner",
          inputs: [],
        },
        {
          type: "error",
          name: "PartyNotFound",
          inputs: [],
        },
        {
          type: "error",
          name: "StakeRatioTooHigh",
          inputs: [],
        },
        {
          type: "error",
          name: "StakingNotRequired",
          inputs: [],
        },
        {
          type: "error",
          name: "TotalStakeRatioExceeds100",
          inputs: [],
        },
        {
          type: "error",
          name: "UnauthorizedContract",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1740746371.json",
      deploymentScript: "Deploy.s.sol",
    },
    Agreement: {
      address: "0xf57d780b983ff930e7699d382614de13804cff67",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_contractlyAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "activateAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "breachAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_breachingParty",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "contractly",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract Contractly",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "createAgreement",
          inputs: [
            {
              name: "_title",
              type: "string",
              internalType: "string",
            },
            {
              name: "_expirationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_totalStakingAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "fulfillAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getAgreementDetails",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "title",
              type: "string",
              internalType: "string",
            },
            {
              name: "creator",
              type: "address",
              internalType: "address",
            },
            {
              name: "creationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "expirationTime",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "disputeWindowDuration",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "totalStakingAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum Contractly.AgreementStatus",
            },
            {
              name: "requiresAllPartiesToSign",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "isStakingRequired",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "partyAddresses",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "lockAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "signAgreementWithStakeDetails",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "stakeAgreement",
          inputs: [
            {
              name: "_agreementId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "event",
          name: "AgreementCreated",
          inputs: [
            {
              name: "agreementId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "title",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "creator",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1740746371.json",
      deploymentScript: "Deploy.s.sol",
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
